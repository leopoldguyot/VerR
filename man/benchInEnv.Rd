% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run.R
\name{benchInEnv}
\alias{benchInEnv}
\title{Benchmark expression in multiple environments}
\usage{
benchInEnv(
  expr,
  envName = envList(),
  rep = 3,
  warmup = 0,
  setup = NULL,
  returnDataframe = TRUE
)
}
\arguments{
\item{expr}{An R expression or a `character()` (deparsed
R expression) to be benchmarked.}

\item{envName}{A `character()` vector specifying the environment(s) name(s).
If more than one environment is specified, the expression will
be evaluated in each one.}

\item{rep}{An `integer(1)` specifying the number of repetitions for
each expression. Default is 3.}

\item{warmup}{An `integer(1)` specifying how many initial repetitions to run
and discard (to remove warm-up bias). Default is `0`.
The total number of executions will be `warmup + rep`.}

\item{setup}{An optional R expression or a `character()` (deparsed
R expression) to be evaluated before the benchmarked expression.
For instance, it can be used to load libraries or retrieve data.}

\item{returnDataframe}{A `logical(1)` indicating whether to return
the results as a data frame (`TRUE`) or as a list (`FALSE`).}
}
\value{
With `returnDataframe == TRUE` (default):
A data frame with columns `envName`, `rep`, and `time`

With `returnDataframe == FALSE`:
A list of execution times for each environment:
\itemize{
  \item A numeric vector of execution times for the evaluated expression
if `length(envName) == 1`.
  \item A list of numeric vectors of execution times for each
environment if `length(envName) > 1`.
}
The result contains the user time (in seconds) for each repetition of
the expression.
}
\description{
Measures the execution time for an R expression across multiple environments.
The function runs the expression multiple times
(controlled by `rep` parameter) and returns the execution times for each run
in the specified environments.
}
\examples{
envCreate("my_env", packages = c("jsonlite"))
benchInEnv(Sys.sleep(1), "my_env",
    rep = 3,
    setup = library(jsonlite),
    returnDataframe = TRUE
)

}
